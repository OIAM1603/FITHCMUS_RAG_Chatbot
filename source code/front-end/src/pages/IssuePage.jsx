import emailjs from "@emailjs/browser";
import { useState } from "react";

function IssuePage() {
  const [feedback, setFeedback] = useState("");
  const [userEmail, setUserEmail] = useState("");
  const [isModalOpen, setIsModalOpen] = useState(false);

  function sendMail() {
    if (!feedback || !userEmail) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß n·ªôi dung ph·∫£n h·ªìi v√† email c·ªßa b·∫°n.");
      return;
    }

    let templateParams = {
      from_name: userEmail, // Email c·ªßa ng∆∞·ªùi g·ª≠i
      message: feedback, // N·ªôi dung ph·∫£n h·ªìi
      reply_to: userEmail, // Email ƒë·ªÉ ph·∫£n h·ªìi l·∫°i
    };

    emailjs
      .send(
        "service_3pur135", // Thay b·∫±ng Service ID c·ªßa b·∫°n
        "template_pxhe9ab", // Thay b·∫±ng Template ID c·ªßa b·∫°n
        templateParams,
        "2wVBISFW8_j42sOUf" // Thay b·∫±ng Public Key c·ªßa b·∫°n
      )
      .then(
        function (response) {
          console.log("SUCCESS!", response.status, response.text);
          setIsModalOpen(true);
          setFeedback("");
          setUserEmail("");
        },
        function (error) {
          console.log("FAILED...", error);
          alert("ƒê√£ x·∫£y ra l·ªói. Vui l√≤ng th·ª≠ l·∫°i sau.");
          setFeedback("");
          setUserEmail("");
        }
      );
  }

  return (
    <div className="flex justify-center h-[85vh] bg-gradient-to-br from-blue-100 to-purple-100">
      {/* Modal */}
      {isModalOpen && (
        <div className="modal modal-open">
          <div className="modal-box">
            <h3 className="font-bold text-lg">G·ª≠i th√†nh c√¥ng ü•≥</h3>
            <p className="py-4">
              C·∫£m ∆°n b·∫°n ƒë√£ g·ª≠i g√≥p √Ω / b√°o l·ªói ü§ó. Ch√∫ng t√¥i s·∫Ω xem x√©t nh·ªØng √Ω
              ki·∫øn c·ªßa ng∆∞·ªùi d√πng ƒë·ªÉ ng√†y c√†ng ho√†n thi·ªán s·∫£n ph·∫©m h∆°n nh√©!
            </p>
            <div className="modal-action">
              <button
                onClick={() => setIsModalOpen(false)}
                className="btn btn-success"
              >
                ƒê√≥ng
              </button>
            </div>
          </div>
        </div>
      )}

      <div className="md:w-[50%]">
        <h1 className="text-3xl text-center font-bold p-5 bg-[linear-gradient(90deg,hsl(var(--s))_0%,hsl(var(--sf))_9%,hsl(var(--pf))_42%,hsl(var(--p))_47%,hsl(var(--a))_100%)] bg-clip-text will-change-auto [-webkit-text-fill-color:transparent] [transform:translate3d(0,0,0)] motion-reduce:!tracking-normal max-[1280px]:!tracking-normal [@supports(color:oklch(0_0_0))]:bg-[linear-gradient(90deg,hsl(var(--s))_4%,color-mix(in_oklch,hsl(var(--sf)),hsl(var(--pf)))_22%,hsl(var(--p))_45%,color-mix(in_oklch,hsl(var(--p)),hsl(var(--a)))_67%,hsl(var(--a))_100.2%)]">
          B√°o l·ªói ho·∫∑c g√≥p √Ω
        </h1>
        <p className="text-justify font-semibold text-sm pr-2 pl-2">
          S·ª± ƒë√≥ng g√≥p √Ω ki·∫øn t·ª´ c√°c b·∫°n s·∫Ω l√† s·ª± h·ªó tr·ª£ ƒë·∫Øc l·ª±c gi√∫p ch√∫ng t√¥i
          ng√†y c√†ng ho√†n thi·ªán s·∫£n ph·∫©m h∆°n.
        </p>

        <textarea
          placeholder="Nh·∫≠p ph·∫£n h·ªìi c·ªßa b·∫°n t·∫°i ƒë√¢y!"
          className="mt-5 mb-3 h-[30%] textarea textarea-bordered textarea-md w-full"
          value={feedback}
          onChange={(e) => setFeedback(e.target.value)}
        ></textarea>

        <input
          type="email"
          placeholder="Email c·ªßa b·∫°n"
          className="input w-full max-w-xs"
          value={userEmail}
          onChange={(e) => setUserEmail(e.target.value)}
        />

        <button
          onClick={sendMail}
          className="mt-5 w-full btn btn-primary btn-md bg-gradient-to-tl from-transparent via-blue-600 to-indigo-500"
        >
          G·ª≠i √Ω ki·∫øn
        </button>
      </div>
    </div>
  );
}

export default IssuePage;
